[{"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/index.js":"1","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/App.js":"2","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/reportWebVitals.js":"3","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/store/store.js":"4","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/reducers/rootReducer.js":"5","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/reducers/loginReducer.js":"6","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/actions/actionTypes.js":"7","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/components/LoginComponent.js":"8","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/components/DashboardComponent.js":"9","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/routes/PublicRoute.js":"10","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/routes/PrivateRoute.js":"11","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/containers/ProfileContainer.js":"12","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/actions/actionCreators.js":"13","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/components/MessageComponent.js":"14"},{"size":500,"mtime":1610599518712,"results":"15","hashOfConfig":"16"},{"size":801,"mtime":1610655547836,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610599518712,"results":"18","hashOfConfig":"16"},{"size":207,"mtime":1610659476518,"results":"19","hashOfConfig":"16"},{"size":143,"mtime":1610655328781,"results":"20","hashOfConfig":"16"},{"size":1243,"mtime":1610661804985,"results":"21","hashOfConfig":"16"},{"size":323,"mtime":1610661690633,"results":"22","hashOfConfig":"16"},{"size":2298,"mtime":1610663262449,"results":"23","hashOfConfig":"16"},{"size":307,"mtime":1610658214425,"results":"24","hashOfConfig":"16"},{"size":323,"mtime":1610654024835,"results":"25","hashOfConfig":"16"},{"size":324,"mtime":1610653015245,"results":"26","hashOfConfig":"16"},{"size":1306,"mtime":1610663383246,"results":"27","hashOfConfig":"16"},{"size":1774,"mtime":1610661693629,"results":"28","hashOfConfig":"16"},{"size":217,"mtime":1610662387056,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"hmhvp9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/index.js",[],["64","65"],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/App.js",["66","67","68","69","70","71"],"import logo from './logo.svg';\nimport './App.css';\n\nimport {Provider} from \"react-redux\";\nimport {store} from './redux/store/store';\n\nimport LoginComponent from './components/LoginComponent';\nimport DashboardComponent from './components/DashboardComponent';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ProfileContainer from './containers/ProfileContainer';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      {/* <Router>\n        <Switch>\n         \n          <PublicRoute component={LoginComponent} path=\"/\" exact />\n          <PrivateRoute component={DashboardComponent} path=\"/dashboard\" exact />\n        </Switch>  \n      </Router>  */}\n      <ProfileContainer />\n     </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/reportWebVitals.js",[],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/store/store.js",[],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/reducers/rootReducer.js",[],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/reducers/loginReducer.js",[],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/actions/actionTypes.js",[],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/components/LoginComponent.js",["72","73"],"import React from \"react\";\nimport logo from \"../logo.svg\";\nimport { showMessage } from \"../redux/actions/actionCreators\";\nimport MessageComponent from './MessageComponent';\nimport '../App.css';\n\nexport default class LoginComponent extends React.Component {\n    constructor(props){\n        super(props); \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n \n    handleChange(e, field){\n        const {setUsername, setPassword } = this.props.props;\n        switch(field){\n            case \"username\":{\n                // this.setState({\n                //     username: e.target.value\n                // });\n              setUsername(e.target.value);\n                break;\n            }\n            case \"password\":{\n                // this.setState({\n                //     password: e.target.value\n                // });\n               setPassword(e.target.value);\n                break;\n            }\n            default:{\n                break;\n            }\n        }\n       \n    }\n   \n    handleSubmit(e, username, password){\n        e.preventDefault();\n        const {checkCredAsync} = this.props.props;\n        checkCredAsync(username,password);\n        // console.log(this.state.username, this.state.password);\n    }\n    render(){\n        const {username, password, showLoader, showMessage } = this.props.props;\n        console.log(\"COmponent rendered\", username,\" \", password);\n        return(\n            <div>\n                <h1>Login</h1>\n                {showLoader && <img src={logo} className={\"App-logo\"}/>}\n                {showMessage && <MessageComponent type={\"-error\"} message=\"Incorrect Username or password ! Please try again\" />}\n                <form onSubmit={(e) => this.handleSubmit(e, username, password)}> \n                    <input className=\"input\" placeholder={\"Username/Email\"} type={\"text\"} onChange={(e) => this.handleChange(e,\"username\")} value={username}required/>\n                    <input placeholder={\"Password\"} type={\"password\"} onChange={(e) => this.handleChange(e,\"password\")} value={password} required/>\n                    <input className=\"submit\" placeholder={\"Submit\"} type={\"submit\"} />\n                </form>\n               \n            </div>\n        );\n    }\n}","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/components/DashboardComponent.js",[],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/routes/PublicRoute.js",[],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/routes/PrivateRoute.js",[],["74","75"],"/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/containers/ProfileContainer.js",["76"],"import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport DashboardComponent from '../components/DashboardComponent';\nimport LoginComponent from '../components/LoginComponent';\nimport { setUsername, setPassword, checkCredAsync, showMessage } from '../redux/actions/actionCreators';\n\n\nclass ProfileContainer extends Component {\n    constructor(props){\n        super(props);\n\n    }\n  \n    render() {\n        return (\n            <div>\n               {this.props.authenticated?<DashboardComponent props={this.props}/>:<LoginComponent props={this.props}/>}\n            </div>\n        )\n    }\n}\n\n const mapStateToProps = (state) => {\nreturn {\n    authenticated: state.login.authenticated,\n    username: state.login.username,\n    password: state.login.password,\n    showLoader: state.login.showLoader,\n    loginError : state.login.loginError\n    \n}\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUsername: (username) => dispatch(setUsername(username)),\n        setPassword: (password) => dispatch(setPassword(password)),\n        checkCredAsync: (username, password) => dispatch(checkCredAsync(username, password)),\n        showMessage: () => dispatch(showMessage())\n        \n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);\n","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/redux/actions/actionCreators.js",["77"],"import {LOGIN, LOGOUT, SET_USERNAME, SET_PASSWORD, SHOW_LOADER, SHOW_MESSAGE, RESET_FIELDS} from './actionTypes';\n\n\nexport const setUsername = (username) => {\n    return {\n        type: SET_USERNAME,\n        username\n    }\n}\n\nexport const setPassword = (password) => {\n    return {\n        type: SET_PASSWORD,\n        password\n    }\n}\nexport const resetFields = () => {\n    return {\n        type: RESET_FIELDS,\n       }\n}\n\nexport const loggedIn = () => {\n    return {\n        type: LOGIN\n    }\n}\n\nexport const loggedOut = () => {\n    return {\n        type: LOGOUT\n            }\n}\n\nexport const showLoader = () => {\n    return {\n        type: SHOW_LOADER\n    }\n};\nexport const showMessage = () => {\n    return {\n        type: SHOW_MESSAGE\n    }\n};\n    \nexport const checkCredAsync = (username, password) => {\n    return async (dispatch) => {\n        dispatch(showLoader());\n        console.log(\"inside checkCredAsync\",username, password);\n        let res = await fetch(\"https://sanjayrjs16.github.io/mock-rest-api/valid-cred.json\");\n        if(res.ok){\n            \n            let {username: validUsername, password: validPassword} = await res.json();\n            console.log(validUsername, validPassword);\n            if(username===validUsername && password ==validPassword){\n                console.log(\"Now logged in my friend\");\n               setTimeout(() => {\n                dispatch(showLoader());\n                dispatch(loggedIn());\n               }, 2000);\n            }\n            else{\n                setTimeout(() => {\n                    dispatch(showLoader());\n                    dispatch(showMessage());\n                    dispatch(resetFields())\n                   }, 2000);\n               \n            }\n            \n        }\n        \n    }\n};\n    ","/home/sanjay/Desktop/Web Dev/Interviews/Appiness/demo-login/src/components/MessageComponent.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":22},{"ruleId":"82","severity":1,"message":"87","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":26},{"ruleId":"82","severity":1,"message":"88","line":10,"column":27,"nodeType":"84","messageId":"85","endLine":10,"endColumn":33},{"ruleId":"82","severity":1,"message":"89","line":10,"column":35,"nodeType":"84","messageId":"85","endLine":10,"endColumn":40},{"ruleId":"82","severity":1,"message":"90","line":10,"column":42,"nodeType":"84","messageId":"85","endLine":10,"endColumn":48},{"ruleId":"82","severity":1,"message":"91","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":51,"column":32,"nodeType":"94","endLine":51,"endColumn":72},{"ruleId":"78","replacedBy":"95"},{"ruleId":"80","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":9,"column":5,"nodeType":"99","messageId":"100","endLine":12,"endColumn":6},{"ruleId":"101","severity":1,"message":"102","line":55,"column":53,"nodeType":"103","messageId":"104","endLine":55,"endColumn":55},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'LoginComponent' is defined but never used.","'DashboardComponent' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'showMessage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["105"],["106"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]