{"version":3,"sources":["logo.svg","redux/actions/actionTypes.js","redux/reducers/loginReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","redux/actions/actionCreators.js","components/MessageComponent.js","components/LoginComponent.js","components/DashboardComponent.js","containers/ProfileContainer.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN","LOGOUT","SET_USERNAME","SET_PASSWORD","SHOW_LOADER","SHOW_MESSAGE","RESET_FIELDS","initialState","authenticated","username","password","showMessage","loginReducer","state","action","type","showLoader","combineReducers","login","store","createStore","rootReducer","applyMiddleware","thunk","MessageComponent","message","className","LoginComponent","props","handleSubmit","bind","handleChange","e","field","this","setUsername","setPassword","target","value","preventDefault","checkCredAsync","console","log","src","logo","onSubmit","placeholder","onChange","required","React","Component","DashboardComponent","ProfileContainer","connect","loginError","dispatch","a","fetch","res","ok","json","validUsername","validPassword","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,G,MAAA,IAA0B,kC,8BCC5BA,EAAQ,QACRC,EAAU,SACVC,EAAe,eACfC,EAAe,eACfC,EAAc,cACdC,EAAe,eACfC,EAAe,eCLtBC,EAAe,CAACC,eAAe,EAAOC,SAAU,GAAIC,SAAU,GAAIC,aAAa,GA0CtEC,EAzCM,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKb,EACD,OAAO,2BACAW,GADP,IACcJ,SAAWK,EAAOL,WAGpC,KAAKN,EACD,OAAO,2BACAU,GADP,IACcH,SAAWI,EAAOJ,WAGpC,KAAKJ,EACD,OAAO,2BACAO,GADP,IACcJ,SAAU,GAAIC,SAAU,KAG1C,KAAKV,EACD,OAAO,2BACAa,GADP,IACcL,eAAgB,IAGlC,KAAKP,EACD,OAAO,2BACAY,GADP,IACeL,eAAgB,IAGnC,KAAKJ,EACD,OAAO,2BACAS,GADP,IACgBG,YAAeH,EAAMG,aAGzC,KAAKX,EACD,OAAO,2BACAQ,GADP,IACgBF,aAAc,IAGlC,QACI,OAAOE,ICtCJI,cACX,CAACC,MAAON,I,QCCCO,EAAQC,YAAYC,EAAYC,YAAgBC,M,4DC6BhDP,EAAa,WACtB,MAAO,CACHD,KAAMX,IAGDO,EAAc,WACvB,MAAO,CACHI,KAAMV,ICtCC,SAASmB,EAAT,GAA4C,IAAjBC,EAAgB,EAAhBA,QAASV,EAAO,EAAPA,KAC/C,OACI,qBAAKW,UAAS,iBAAYX,GAA1B,SACI,4BAAIU,M,ICAKE,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAHN,E,yDAOLE,EAAGC,GAAO,IAAD,EACkBC,KAAKN,MAAMA,MAAxCO,EADW,EACXA,YAAaC,EADF,EACEA,YACpB,OAAOH,GACH,IAAK,WAIHE,EAAYH,EAAEK,OAAOC,OACnB,MAEJ,IAAK,WAIFF,EAAYJ,EAAEK,OAAOC,U,mCAUnBN,EAAGvB,EAAUC,GACtBsB,EAAEO,kBAEFC,EADyBN,KAAKN,MAAMA,MAA7BY,gBACQ/B,EAASC,K,+BAGnB,IAAD,SACmDwB,KAAKN,MAAMA,MAA3DnB,EADH,EACGA,SAAUC,EADb,EACaA,SAAUM,EADvB,EACuBA,WAAYL,EADnC,EACmCA,YAEvC,OADA8B,QAAQC,IAAI,qBAAsBjC,EAAS,IAAKC,GAE5C,gCACI,uCACCM,GAAc,qBAAK2B,IAAKC,EAAMlB,UAAW,aACzCf,GAAe,cAACa,EAAD,CAAkBT,KAAM,SAAUU,QAAQ,sDAC1D,uBAAMoB,SAAU,SAACb,GAAD,OAAO,EAAKH,aAAaG,EAAGvB,EAAUC,IAAtD,UACI,uBAAOgB,UAAU,QAAQoB,YAAa,iBAAkB/B,KAAM,OAAQgC,SAAU,SAACf,GAAD,OAAO,EAAKD,aAAaC,EAAE,aAAaM,MAAO7B,EAASuC,UAAQ,IAChJ,uBAAOF,YAAa,WAAY/B,KAAM,WAAYgC,SAAU,SAACf,GAAD,OAAO,EAAKD,aAAaC,EAAE,aAAaM,MAAO5B,EAAUsC,UAAQ,IAC7H,uBAAOtB,UAAU,SAASoB,YAAa,SAAU/B,KAAM,qB,GAjD/BkC,IAAMC,WCJ7BC,E,oNAKb,OACI,sDAEKV,QAAQC,IAAI,2B,GARmBQ,aCK1CE,E,kDACF,WAAYxB,GAAO,uCACTA,G,qDAKN,OACI,8BACIM,KAAKN,MAAMpB,cAAc,cAAC,EAAD,CAAoBoB,MAAOM,KAAKN,QAAS,cAAC,EAAD,CAAgBA,MAAOM,KAAKN,c,GAT/EsB,aAkChBG,eAnBU,SAACxC,GAC1B,MAAO,CACHL,cAAeK,EAAMK,MAAMV,cAC3BC,SAAUI,EAAMK,MAAMT,SACtBC,SAAUG,EAAMK,MAAMR,SACtBM,WAAYH,EAAMK,MAAMF,WACxBsC,WAAazC,EAAMK,MAAMoC,eAIF,SAACC,GACxB,MAAO,CACHpB,YAAa,SAAC1B,GAAD,OAAc8C,EJ/BR,SAAC9C,GACxB,MAAO,CACHM,KAAMb,EACNO,YI4BoC0B,CAAY1B,KAChD2B,YAAa,SAAC1B,GAAD,OAAc6C,EJzBR,SAAC7C,GACxB,MAAO,CACHK,KAAMZ,EACNO,YIsBoC0B,CAAY1B,KAChD8B,eAAgB,SAAC/B,EAAUC,GAAX,OAAwB6C,EJSlB,SAAC9C,EAAUC,GACrC,8CAAO,WAAO6C,GAAP,qBAAAC,EAAA,6DACHD,EAASvC,KACTyB,QAAQC,IAAI,wBAAwBjC,EAAUC,GAF3C,SAGa+C,MAAM,+DAHnB,YAGCC,EAHD,QAIIC,GAJJ,iCAMgED,EAAIE,OANpE,gBAMgBC,EANhB,EAMMpD,SAAmCqD,EANzC,EAM+BpD,SAC9B+B,QAAQC,IAAImB,EAAeC,GACxBrD,IAAWoD,GAAiBnD,GAAWoD,GACtCrB,QAAQC,IAAI,2BACbqB,YAAW,WACVR,EAASvC,KACTuC,EAnCL,CACHxC,KAAMf,MAmCI,MAGF+D,YAAW,WACPR,EAASvC,KACTuC,EAAS5C,KACT4C,EAhDT,CACHxC,KAAMT,MAgDQ,KApBX,4CAAP,sDIVqDkC,CAAe/B,EAAUC,KAC1EC,YAAa,kBAAM4C,EAAS5C,SAIrB0C,CAA6CD,GCX7CY,MAjBf,WACE,OACE,cAAC,IAAD,CAAU7C,MAAOA,EAAjB,SACA,qBAAKO,UAAU,MAAf,SAQE,cAAC,EAAD,SCZSuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99d11763.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const LOGIN_CHECK = \"LOGIN_CHECK\";\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT  = \"LOGOUT\";\nexport const SET_USERNAME = \"SET_USERNAME\";\nexport const SET_PASSWORD = \"SET_PASSWORD\"; \nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const SHOW_MESSAGE = \"SHOW_MESSAGE\";\nexport const RESET_FIELDS = \"RESET_FIELDS\";","import {SHOW_LOADER, LOGIN, LOGOUT,RESET_FIELDS, SET_USERNAME, SET_PASSWORD, SHOW_MESSAGE} from '../actions/actionTypes';\n\nconst initialState = {authenticated: false, username: '', password: '', showMessage: false}\nconst loginReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_USERNAME: {\n            return {\n                ...state, username : action.username\n            }\n        }\n        case SET_PASSWORD: {\n            return {\n                ...state, password : action.password\n            }\n        }\n        case RESET_FIELDS: {\n            return {\n                ...state, username: '', password: ''\n            }\n        }\n        case LOGIN: {\n            return {\n                ...state, authenticated : true\n            }\n        }\n        case LOGOUT: {\n            return {\n                ...state,  authenticated : false\n            }\n        }\n        case SHOW_LOADER: {\n            return {\n                ...state,   showLoader : !(state.showLoader)\n            }\n        }\n        case SHOW_MESSAGE: {\n            return {\n                ...state,   showMessage : true\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport default loginReducer;","import loginReducer  from \"./loginReducer\";\nimport {combineReducers} from \"redux\";\n\nexport default combineReducers(\n    {login: loginReducer});","import {createStore, applyMiddleware} from \"redux\";\nimport rootReducer from '../reducers/rootReducer';\nimport thunk from \"redux-thunk\";\n\n\nexport const store = createStore(rootReducer,applyMiddleware(thunk));","import {LOGIN, LOGOUT, SET_USERNAME, SET_PASSWORD, SHOW_LOADER, SHOW_MESSAGE, RESET_FIELDS} from './actionTypes';\n\n\nexport const setUsername = (username) => {\n    return {\n        type: SET_USERNAME,\n        username\n    }\n}\n\nexport const setPassword = (password) => {\n    return {\n        type: SET_PASSWORD,\n        password\n    }\n}\nexport const resetFields = () => {\n    return {\n        type: RESET_FIELDS,\n       }\n}\n\nexport const loggedIn = () => {\n    return {\n        type: LOGIN\n    }\n}\n\nexport const loggedOut = () => {\n    return {\n        type: LOGOUT\n            }\n}\n\nexport const showLoader = () => {\n    return {\n        type: SHOW_LOADER\n    }\n};\nexport const showMessage = () => {\n    return {\n        type: SHOW_MESSAGE\n    }\n};\n    \nexport const checkCredAsync = (username, password) => {\n    return async (dispatch) => {\n        dispatch(showLoader());\n        console.log(\"inside checkCredAsync\",username, password);\n        let res = await fetch(\"https://sanjayrjs16.github.io/mock-rest-api/valid-cred.json\");\n        if(res.ok){\n            \n            let {username: validUsername, password: validPassword} = await res.json();\n            console.log(validUsername, validPassword);\n            if(username===validUsername && password ==validPassword){\n                console.log(\"Now logged in my friend\");\n               setTimeout(() => {\n                dispatch(showLoader());\n                dispatch(loggedIn());\n               }, 2000);\n            }\n            else{\n                setTimeout(() => {\n                    dispatch(showLoader());\n                    dispatch(showMessage());\n                    dispatch(resetFields())\n                   }, 2000);\n               \n            }\n            \n        }\n        \n    }\n};\n    ","import React from 'react';\nimport '../App.css';\n\nexport default function MessageComponent({message, type}) {\n    return (\n        <div className={`message${type}`}>\n            <p>{message}</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport logo from \"../logo.svg\";\nimport { showMessage } from \"../redux/actions/actionCreators\";\nimport MessageComponent from './MessageComponent';\nimport '../App.css';\n\nexport default class LoginComponent extends React.Component {\n    constructor(props){\n        super(props); \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n \n    handleChange(e, field){\n        const {setUsername, setPassword } = this.props.props;\n        switch(field){\n            case \"username\":{\n                // this.setState({\n                //     username: e.target.value\n                // });\n              setUsername(e.target.value);\n                break;\n            }\n            case \"password\":{\n                // this.setState({\n                //     password: e.target.value\n                // });\n               setPassword(e.target.value);\n                break;\n            }\n            default:{\n                break;\n            }\n        }\n       \n    }\n   \n    handleSubmit(e, username, password){\n        e.preventDefault();\n        const {checkCredAsync} = this.props.props;\n        checkCredAsync(username,password);\n        // console.log(this.state.username, this.state.password);\n    }\n    render(){\n        const {username, password, showLoader, showMessage } = this.props.props;\n        console.log(\"COmponent rendered\", username,\" \", password);\n        return(\n            <div>\n                <h1>Login</h1>\n                {showLoader && <img src={logo} className={\"App-logo\"}/>}\n                {showMessage && <MessageComponent type={\"-error\"} message=\"Incorrect Username or password ! Please try again\" />}\n                <form onSubmit={(e) => this.handleSubmit(e, username, password)}> \n                    <input className=\"input\" placeholder={\"Username/Email\"} type={\"text\"} onChange={(e) => this.handleChange(e,\"username\")} value={username}required/>\n                    <input placeholder={\"Password\"} type={\"password\"} onChange={(e) => this.handleChange(e,\"password\")} value={password} required/>\n                    <input className=\"submit\" placeholder={\"Submit\"} type={\"submit\"} />\n                </form>\n               \n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport default class DashboardComponent extends Component {\n    componentDidMount(){\n\n    }\n    render() {\n        return (\n            <div>\n                Nothing to see here\n                {console.log(\"Inside dashboard\")}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport DashboardComponent from '../components/DashboardComponent';\nimport LoginComponent from '../components/LoginComponent';\nimport { setUsername, setPassword, checkCredAsync, showMessage } from '../redux/actions/actionCreators';\n\n\nclass ProfileContainer extends Component {\n    constructor(props){\n        super(props);\n\n    }\n  \n    render() {\n        return (\n            <div>\n               {this.props.authenticated?<DashboardComponent props={this.props}/>:<LoginComponent props={this.props}/>}\n            </div>\n        )\n    }\n}\n\n const mapStateToProps = (state) => {\nreturn {\n    authenticated: state.login.authenticated,\n    username: state.login.username,\n    password: state.login.password,\n    showLoader: state.login.showLoader,\n    loginError : state.login.loginError\n    \n}\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUsername: (username) => dispatch(setUsername(username)),\n        setPassword: (password) => dispatch(setPassword(password)),\n        checkCredAsync: (username, password) => dispatch(checkCredAsync(username, password)),\n        showMessage: () => dispatch(showMessage())\n        \n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);\n","import logo from './logo.svg';\nimport './App.css';\n\nimport {Provider} from \"react-redux\";\nimport {store} from './redux/store/store';\n\nimport LoginComponent from './components/LoginComponent';\nimport DashboardComponent from './components/DashboardComponent';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ProfileContainer from './containers/ProfileContainer';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      {/* <Router>\n        <Switch>\n         \n          <PublicRoute component={LoginComponent} path=\"/\" exact />\n          <PrivateRoute component={DashboardComponent} path=\"/dashboard\" exact />\n        </Switch>  \n      </Router>  */}\n      <ProfileContainer />\n     </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}